# @Scenario LLC contention:
# 3 redis instances;
# 3 twemcached instances (one big instance with big workload, other two relatively small);
# start cassandra service but no workload to train the model;
# start the cassandra stressor to test the model for cache contention.

application_hosts:
  hosts:
    100.64.176.13:
      env_uniq_id: 13
      load_generator_host_ip: 100.64.176.21
    # another pair of nodes
    100.64.176.14:
      env_uniq_id: 14
      load_generator_host_ip: 100.64.176.22
    # another pair of nodes
    100.64.176.15:
      env_uniq_id: 15
      load_generator_host_ip: 100.64.176.23
  vars:
    # Variables for setting ansible.
    ansible_connection: local
    ansible_ssh_user: root
    ansible_user: root

    # Global variables to run workloads.
    cluster: example
    role: root
    image_tag: 5d63eb76795a227c0985618c918669f02a30c7ed

    wrapper_kafka_brokers: 100.64.176.12
    docker_registry: 100.64.176.12:80

    workloads:
      specjbb:
        default:
          count: 1
          slo: 26000000
          communication_port: 42000
          backend:
            count: 3
            resources: {'cpu': 1, 'ram': 20, 'disk': 10}
          injector:
            count: 3
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
          controller:
            resources: {'cpu': 1, 'ram': 5, 'disk': 10}
      tensorflow_benchmark_train:
        default:
          count: 1
          slo: 0.03
            resources: {'cpu': 10, 'ram': 10, 'disk': 10}
      tensorflow_benchmark_prediction:
        default:
          labels: {'type': 'best_efforts'}
          count: 1
          slo: 0.03
            resources: {'cpu': 20, 'ram': 50, 'disk': 50}
      cassandra_stress:
        low:
          labels: {'type': 'best_efforts'}
          count: 1
          communication_port: 9142
          jmx_port: 7299
          slo: 1000
          cassandra:
            image_name: cassandra
            image_tag: 3.11.3
            resources: {'cpu': 10, 'ram': 50, 'disk': 50}
          cassandra_stress:
            env:
              threads: 8
              #qps: @TODO in cassandra_stress.aurora
            resources: {'cpu': 8, 'ram': 20, 'disk': 50}
